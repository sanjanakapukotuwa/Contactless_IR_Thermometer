//version 6

#include <Adafruit_SSD1306.h>
#include <splash.h>

#include <Wire.h>
#include <Adafruit_MLX90614.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <BlynkSimpleEsp8266.h>

Adafruit_MLX90614 mlx = Adafruit_MLX90614();
 
double temp_amb;
double temp_obj;
double temp_display;
double calibration = 2.36;

//#define BLYNK_TEMPLATE_ID "TMPL6_kkF_olc"
//#define BLYNK_TEMPLATE_NAME "Contactless temperature sensor"
//#define BLYNK_AUTH_TOKEN "ckno1pvJfwnSd7JzdlGaiiYGlmt89GWR"

#define SCREEN_WIDTH 128    // OLED display width, in pixels
#define SCREEN_HEIGHT 64    // OLED display height, in pixels
#define OLED_RESET -1       // Reset pin # (or -1 if sharing Arduino reset pin)
const int LED = 2;
const int LASER = 14;       //must be  14 acc to pcb
const int READ = 12;
const int WIFI = 13;
bool wifi_mode = false;


char auth[] = "ckno1pvJfwnSd7JzdlGaiiYGlmt89GWR";
char ssid[] = "HUAWEI Y9 2018";
char pass[] = "sanju123";


Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

bool button_press(int button) {
  // read the state of the pushbutton value:
  int buttonState = digitalRead(button);

  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  if (buttonState == HIGH) {
    return true;
  } else {
    return false;
  }
}

void setup() {
  Serial.begin(9600);
  pinMode(LED, OUTPUT);  // Initialize the LED_BUILTIN pin as an output
  pinMode(LASER, OUTPUT);
  pinMode(READ, INPUT);
  pinMode(WIFI, INPUT);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  mlx.begin();  
  Blynk.begin(auth, ssid, pass); 
  
  display.clearDisplay();
  display.setCursor(15,10);  
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.println(" IR Thermomteter");
  display.setCursor(20,30);
  display.setTextSize(1);
  display.print("By 200287L");
  display.setCursor(20,50);
  display.setTextSize(1);
  display.print("Version 6");
  display.display();
  delay(4000);
}

// the loop function runs over and over again forever
void loop() {
  Serial.print("Testing");
  display.clearDisplay();
  display.setCursor(5,10);  
  display.setTextSize(1);
  display.println(" Press button");
  display.setCursor(5,30);  
  display.setTextSize(1);
  display.println(" to obtain ");
  display.setCursor(5,50);  
  display.setTextSize(1);
  display.println(" the temperature ");
  display.display();

  if(button_press(WIFI)==true){
        
        wifi_mode = !wifi_mode;
        Blynk.begin(auth, ssid, pass); 
        display.clearDisplay();
        display.setCursor(20,30);  
        display.setTextSize(1);
        if (wifi_mode == true){display.println("WIFI ON");}
        else{display.println("WIFI OFF");}
        display.display();
        delay(2000);
      
    }

  if(button_press(READ)==true){
      Serial.print("Button is pressed");
      digitalWrite(LED, LOW);         //turn on the built in led
      digitalWrite(LASER, HIGH);
      temp_amb = mlx.readAmbientTempC();
      temp_obj = mlx.readObjectTempC();
      temp_display = temp_obj + calibration;
      display.clearDisplay();
      display.setCursor(20,30);  
      display.setTextSize(1);
      display.println("Reading....");
      display.display();
      
      delay(2000);
      digitalWrite(LASER, LOW);
      
      display.clearDisplay();
      display.setCursor(25,0);  
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.println(" Temperature");
  
      display.setCursor(10,20);
      display.setTextSize(1);
      display.print("Ambient: ");
      display.print(temp_amb);
      display.print((char)247);
      display.print("C");
     
      display.setCursor(10,40);
      display.setTextSize(1);
      display.print("Object: ");
      display.print(temp_display);
      display.print((char)247);
      display.print("C");
      
      display.display();   
      delay(5000);

      if(wifi_mode == true){
        Blynk.begin(auth, ssid, pass); 
        Blynk.run();
        Blynk.virtualWrite(V0,temp_display);
        display.clearDisplay();
        display.setCursor(20,30);  
        display.setTextSize(1);
        display.println("Recording data...");
        display.display();
        delay(3000);
        }
    }else{
      digitalWrite(LED, HIGH);    // turn off the built in led
      }  
}
